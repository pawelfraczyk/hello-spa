stages:
  - build production
  - build docker image
  - test
  - deploy staging
  - deploy production

cache: 
  key: ${CI_COMMIT_REF_SLUG}
  paths:
    - node_modules/
  policy: pull

variables:
  CLI_VERSION: 9.1.5
  REPOSITORY_URL: 439352748066.dkr.ecr.eu-central-1.amazonaws.com/spa:develop
  S3_BUCKET_NAME: "spa-prod-app-bucket"
  
test:karma:
  stage: test
  image: trion/ng-cli-karma:${CLI_VERSION}
  allow_failure: false
  script:
    - npm install
    - ng test --progress false --watch false
  
build docker image:
  stage: build docker image
  environment:
    name: staging
  variables:
    DOCKER_DRIVER: overlay2
    DOCKER_HOST: tcp://docker:2375
    DOCKER_TLS_CERTDIR: ''
  image: docker:19.03
  services:
    - docker:19.03-dind
  before_script:
    - docker info
    - apk add --no-cache curl jq python py-pip
    - pip install awscli
  script:
    - $(aws ecr get-login --no-include-email --region eu-central-1)
    - docker build -t $REPOSITORY_URL .
    - docker push $REPOSITORY_URL
  only:
    - develop

build production:
  stage: build production
  environment: 
    name: production
  image: node:12-alpine
  before_script:
    - npm install -g @angular/cli@9.1.0
  script:
    - npm install
    - ng build --prod
  artifacts:
    paths:
      - ./dist
  only:
    - master

deploy staging:
  stage: deploy staging
  environment:
    name: staging
  image: alpine/helm:latest
  script:
    - helm upgrade -i spa ./spa
  only:
    - develop

deploy production:
  stage: deploy production
  environment: 
    name: production
  image: python:latest
  script:
    - pip install awscli
    - cd ./dist/hello-spa
    - aws s3 sync . s3://$S3_BUCKET_NAME/
  when: manual
  allow_failure: false
  only:
    - master

update cache:
  script:
    - npm install
  cache:
    key: ${CI_COMMIT_REF_SLUG}
    paths:
      - node_modules/
    policy: push
  only:
    - schedules